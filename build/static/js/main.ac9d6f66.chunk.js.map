{"version":3,"sources":["theme/styles.js","theme/components/button.js","theme/index.js","components/Header/Header.tsx","components/MultiStepForm/MultiStepForm.tsx","pages/MultiStepExample/Steps/StepComponentExample.tsx","pages/MultiStepExample/MultiStepExample.tsx","App.tsx","index.tsx"],"names":["styles","global","body","bg","color","a","_hover","textDecoration","Button","baseStyle","fontFamily","sizes","md","fontSize","fontWeight","padding","height","borderRadius","boxShadow","sm","variants","outline","props","border","borderColor","opacity","_active","_focus","solid","iconnavbar","actionbutton","minWidth","bigactionbutton","defaultProps","size","variant","MultiStepTheme","extendTheme","components","Header","w","h","bgGradient","zIndex","px","alignItems","justifyContent","lg","MultiStepForm","registeredSteps","activeStep","goToStep","useState","activeStepChange","setActiveStepChange","finishedSteps","length","stepColorStatus","level","stepColorStatusText","stepColorBar","useEffect","position","sort","b","map","label","flexDirection","textAlign","onClick","mt","transition","StepComponentExample","MultiStepExample","initialStep","maxSteps","setActiveStep","firstStep","setFirstStep","finalStep","setFinalStep","nextStep","previousStep","resetSteps","step","useMultiStepForm","pageTitle","setPageTitle","pageSubTitle","find","maxW","p","pt","pb","py","changeStepPages","borderTop","alert","App","resetCSS","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac9d6f66.chunk.js","sourcesContent":["const styles = {\r\n  global: {\r\n    body: {\r\n      // bg: '#E9ECF3',\r\n      bg: '#ffffff',\r\n      color: 'black',\r\n    },\r\n    '*': {},\r\n    a: {\r\n      _hover: {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","const Button = {\r\n  baseStyle: {\r\n    color: 'blue.900',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  sizes: {\r\n    md: {\r\n      fontSize: '16px',\r\n      fontWeight: 'bold',\r\n      padding: '0px 60px',\r\n      height: '50px',\r\n      borderRadius: '6px',\r\n      boxShadow: '0 3px 6px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n    sm: {\r\n      fontSize: '14px',\r\n      fontWeight: '500',\r\n      padding: '5px 17px',\r\n      height: '40px',\r\n      borderRadius: '6px',\r\n      boxShadow: '0 3px 6px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n  },\r\n  variants: {\r\n    outline: (props) => ({\r\n      color: 'blue.500',\r\n      border: '2px solid',\r\n      borderColor: props.color ? props.color : 'blue.500',\r\n      _hover: {\r\n        color: 'white',\r\n        bg: props.color ? props.color : 'blue.700',\r\n        opacity: 0.75,\r\n        boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.25)',\r\n      },\r\n      _active: {\r\n        bg: props.color ? props.color : 'blue.900',\r\n        opacity: 0.9,\r\n      },\r\n      _focus: {\r\n        boxShadow: '0 0 1px 2px rgba(0, 0, 0, .05), 0 1px 1px rgba(0, 0, 0, .15)',\r\n      },\r\n    }),\r\n    solid: (props) => ({\r\n      color: 'white',\r\n      bg: props.bg ? props.bg : 'blue.500',\r\n      _hover: {\r\n        bg: props.bg ? props.bg : 'blue.400',\r\n        opacity: 1,\r\n        boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.25)',\r\n      },\r\n      _active: {\r\n        bg: props.bg ? props.bg : 'blue.600',\r\n        opacity: 0.9,\r\n      },\r\n      _focus: {\r\n        boxShadow: '0 0 1px 2px rgba(0, 0, 0, .05), 0 1px 1px rgba(0, 0, 0, .15)',\r\n      },\r\n    }),\r\n    iconnavbar: (props) => ({\r\n      fontSize: '18px',\r\n      padding: '0px',\r\n      bg: props.bg ? 'rgba(0, 0, 0, .0)' : 'rgba(0, 0, 0, .0)',\r\n      _hover: {\r\n        fontSize: '18px',\r\n        color: 'white',\r\n        bg: props.color !== 'white' ? props.color : 'blue.700',\r\n        boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.15)',\r\n      },\r\n    }),\r\n    actionbutton: (props) => ({\r\n      fontSize: '18px',\r\n      bg: props.bg ? 'rgba(0, 0, 0, .0)' : 'rgba(0, 0, 0, .0)',\r\n      padding: '0px',\r\n      boxShadow: 'none',\r\n      height: '30px',\r\n      minWidth: '30px',\r\n      _hover: {\r\n        fontSize: '18px',\r\n        color: 'white',\r\n        bg: props.color !== 'white' ? props.color : 'blue.700',\r\n      },\r\n    }),\r\n    bigactionbutton: (props) => ({\r\n      fontSize: '18px',\r\n      bg: props.bg ? 'rgba(0, 0, 0, .0)' : 'rgba(0, 0, 0, .0)',\r\n      padding: '0px',\r\n      boxShadow: 'none',\r\n      height: '40px',\r\n      minWidth: '30px',\r\n      _hover: {\r\n        fontSize: '18px',\r\n        color: 'white',\r\n        bg: props.color !== 'white' ? props.color : 'blue.700',\r\n      },\r\n    }),\r\n  },\r\n  defaultProps: {\r\n    size: 'md',\r\n    variant: 'solid',\r\n  },\r\n};\r\n\r\nexport default Button;\r\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\nimport styles from './styles';\r\nimport Button from './components/button';\r\n\r\nconst MultiStepTheme = extendTheme({\r\n  styles,\r\n  components: {\r\n    Button,\r\n  },\r\n});\r\n\r\nexport default MultiStepTheme;\r\n","// theme + styles\r\nimport { Box, Flex, Heading } from '@chakra-ui/react';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Box w=\"100%\" h=\"120px\" bgGradient=\"linear(to-tr, blue.700, blue.900)\" boxShadow=\"lg\" zIndex=\"10\" px=\"10px\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" h=\"100%\" px={{ lg: '12.5%', md: '5%', sm: '5%' }}>\r\n        <Heading size=\"lg\" color=\"white\">MultiStep Form Example</Heading>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n// theme + styles\r\nimport { Flex, Box } from '@chakra-ui/react';\r\n\r\ninterface IStepsControlProps {\r\n  initialStep: number;\r\n  maxSteps: number;\r\n}\r\n\r\ninterface IMultiStepProps {\r\n  registeredSteps: Array<any>;\r\n  activeStep: number;\r\n  goToStep: (step: number) => void;\r\n}\r\n\r\nexport function useMultiStepForm({ initialStep, maxSteps }: IStepsControlProps) {\r\n  const [activeStep, setActiveStep] = useState(initialStep);\r\n  const [firstStep, setFirstStep] = useState(true);\r\n  const [finalStep, setFinalStep] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 1) {\r\n      setFirstStep(true);\r\n    } else {\r\n      setFirstStep(false);\r\n    }\r\n    if (activeStep === maxSteps) {\r\n      setFinalStep(true);\r\n    } else {\r\n      setFinalStep(false);\r\n    }\r\n  }, [activeStep, maxSteps]);\r\n\r\n  const previousStep = () => {\r\n    if (activeStep !== 1) {\r\n      setActiveStep(activeStep - 1);\r\n    }\r\n  };\r\n\r\n  const nextStep = () => {\r\n    if (activeStep !== maxSteps) {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const resetSteps = () => {\r\n    setActiveStep(initialStep);\r\n  };\r\n\r\n  const goToStep = (step: number) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return { nextStep, previousStep, resetSteps, activeStep, firstStep, finalStep, goToStep };\r\n}\r\n\r\nexport default function MultiStepForm({ registeredSteps, activeStep, goToStep }: IMultiStepProps) {\r\n  const [activeStepChange, setActiveStepChange] = useState(activeStep);\r\n\r\n  const finishedSteps = registeredSteps.length + 1;\r\n\r\n  useEffect(() => {\r\n    setActiveStepChange(activeStep);\r\n  }, [activeStep]);\r\n\r\n  function stepColorStatus(level: number) {\r\n    if (level === activeStepChange) {\r\n      return 'blue.500';\r\n    } else if (level > activeStepChange) {\r\n      return 'blue.100';\r\n    } else if (level < activeStepChange) {\r\n      return 'green.500';\r\n    } else if (activeStepChange === finishedSteps) {\r\n      return 'green.500';\r\n    }\r\n  }\r\n\r\n  function stepColorStatusText(level: number) {\r\n    if (level === activeStepChange) {\r\n      return 'blue.500';\r\n    } else if (level > activeStepChange) {\r\n      return 'gray.700';\r\n    } else if (level < activeStepChange) {\r\n      return 'green.600';\r\n    } else if (activeStepChange === finishedSteps) {\r\n      return 'green.600';\r\n    }\r\n  }\r\n\r\n  function stepColorBar(level: number) {\r\n    if (level === activeStepChange - 1) {\r\n      return 'linear(to-r, green.500, green.500, green.500, green.500, blue.500)';\r\n    } else if (level === activeStepChange) {\r\n      return 'linear(to-r, blue.300, blue.100, blue.100, blue.100, blue.100)';\r\n    } else if (level < activeStepChange) {\r\n      return 'linear(to-r, green.500, green.500)';\r\n    } else if (level > activeStepChange) {\r\n      return 'linear(to-r, blue.100, blue.100)';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex position=\"relative\" justifyContent=\"space-between\" w=\"100%\" h=\"100%\" color=\"blue.900\">\r\n      {registeredSteps\r\n        .sort((a, b) => {\r\n          if (a.level > b.level) {\r\n            return 1;\r\n          } else if (a.level < b.level) {\r\n            return -1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        })\r\n        .map(({ level, label }) => {\r\n          return (\r\n            <>\r\n              <Flex\r\n                key={level}\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n                position=\"relative\"\r\n                textAlign=\"center\"\r\n                w=\"200px\"\r\n                onClick={() => goToStep(level)}\r\n              >\r\n                <Box mt=\"0px\" w=\"18px\" h=\"18px\" bg={stepColorStatus(level)} borderRadius=\"full\" transition=\"0.5s all\" zIndex=\"5\"></Box>\r\n                <Box fontSize=\"12px\" color={stepColorStatusText(level)} fontWeight={level === activeStepChange ? 'bold' : ''}>\r\n                  {label}\r\n                </Box>\r\n              </Flex>\r\n              {level !== registeredSteps[registeredSteps.length - 1].level ? (\r\n                <Flex mt=\"6px\" w=\"200px\" justifyContent=\"center\" position=\"relative\">\r\n                  <Box position=\"absolute\" w=\"200%\" h=\"6px\" bgGradient={stepColorBar(level)} transition=\"0.5s all\"></Box>\r\n                </Flex>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box } from '@chakra-ui/react';\r\n\r\nexport default function StepComponentExample() {\r\n  return <Box>Step Component Example</Box>;\r\n}\r\n","import { useState, useEffect } from 'react';\r\n// theme + styles\r\nimport { Container, Flex, Heading, Box, Button } from '@chakra-ui/react';\r\n// components\r\nimport Header from '../../components/Header/Header';\r\nimport MultiStepForm, { useMultiStepForm } from '../../components/MultiStepForm/MultiStepForm';\r\n// steps\r\nimport StepComponentExample from './Steps/StepComponentExample';\r\n\r\ninterface IRegistredStepProps {\r\n  level: number;\r\n  label: string;\r\n}\r\n\r\nexport default function MultiStepExample() {\r\n  // steps array\r\n  const [registeredSteps] = useState<IRegistredStepProps[] | undefined>([\r\n    { level: 1, label: 'Step Component Example' },\r\n    { level: 2, label: 'Text Example' },\r\n    { level: 3, label: 'Finished Example' },\r\n  ]);\r\n  // multistep hooks\r\n  const { previousStep, nextStep, goToStep, activeStep, firstStep, finalStep } = useMultiStepForm({\r\n    initialStep: 1,\r\n    maxSteps: registeredSteps ? registeredSteps.length : 0,\r\n  });\r\n\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  const [pageSubTitle] = useState('');\r\n\r\n  // change pagename based on its array\r\n  useEffect(() => {\r\n    function changePageName() {\r\n      registeredSteps?.find(({ level, label }: IRegistredStepProps) => {\r\n        if (level === activeStep) {\r\n          setPageTitle(label);\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n    changePageName();\r\n  }, [activeStep, registeredSteps]);\r\n\r\n  const changeStepPages = () => {\r\n    switch (activeStep) {\r\n      case 1:\r\n        return <StepComponentExample />;\r\n      case 2:\r\n        return 'Text Example';\r\n      case 3:\r\n        return 'Finished';\r\n    }\r\n  };\r\n\r\n  function handleFinishSteps() {\r\n    alert('Steps Finished');\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"100%\" h=\"100vh\" p=\"0\">\r\n      <Header />\r\n      <Box w=\"100%\" h=\"100px\" bgGradient=\"linear(to-tr, white, gray.100)\" boxShadow=\"sm\" px=\"10px\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" h=\"100%\" px={{ lg: '12.5%', md: '5%', sm: '5%' }}>\r\n          <Box>\r\n            <Heading size=\"md\">{pageTitle}</Heading>\r\n            <Heading size=\"xs\">{pageSubTitle}</Heading>\r\n          </Box>\r\n          <Box w=\"60%\" h=\"100%\" pt=\"30px\" pb=\"10px\">\r\n            <MultiStepForm activeStep={activeStep} registeredSteps={registeredSteps ? registeredSteps : []} goToStep={goToStep} />\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      <Box w=\"100%\" px=\"10px\">\r\n        <Box px={{ lg: '12.5%', md: '5%', sm: '5%' }}>\r\n          <Flex py=\"40px\">{changeStepPages()}</Flex>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" py=\"20px\" borderTop=\"1px solid\" borderColor=\"gray.200\">\r\n            {!firstStep ? (\r\n              <Button variant=\"outline\" color=\"gray.400\" onClick={() => previousStep()}>\r\n                Previous\r\n              </Button>\r\n            ) : (\r\n              <Box></Box>\r\n            )}\r\n            {!finalStep ? (\r\n              <Button onClick={() => nextStep()}>Next</Button>\r\n            ) : (\r\n              <Button onClick={() => handleFinishSteps()}>Finish</Button>\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport MultiStepTheme from './theme/index';\r\n\r\nimport MultiStepExample from './pages/MultiStepExample/MultiStepExample'\r\n\r\nconst App = () => {\r\n  return (\r\n    <ChakraProvider resetCSS={true} theme={MultiStepTheme}>\r\n      <MultiStepExample/>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}